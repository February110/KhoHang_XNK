// <auto-generated />
using System;
using KhoHang_XNK.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KhoHang_XNK.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250406002746_avatarUser")]
    partial class avatarUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KhoHang_XNK.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("KhoHang_XNK.Models.ChiTietDonNhap", b =>
                {
                    b.Property<int>("MaDonNhap")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("MaHangHoa")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaDonNhap", "MaHangHoa");

                    b.HasIndex("MaHangHoa");

                    b.ToTable("ChiTietDonNhaps");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.ChiTietDonXuat", b =>
                {
                    b.Property<int>("MaDonXuat")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("MaHangHoa")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaDonXuat", "MaHangHoa");

                    b.HasIndex("MaHangHoa");

                    b.ToTable("ChiTietDonXuats");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.ChiTietPhieuKiemKe", b =>
                {
                    b.Property<int>("MaKiemKe")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("MaHangHoa")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("SoLuongChenhLech")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongThucTe")
                        .HasColumnType("int");

                    b.HasKey("MaKiemKe", "MaHangHoa");

                    b.HasIndex("MaHangHoa");

                    b.ToTable("ChiTietPhieuKiemKes");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.DonNhapHang", b =>
                {
                    b.Property<int>("MaDonNhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDonNhap"));

                    b.Property<int>("MaKho")
                        .HasColumnType("int");

                    b.Property<int>("MaNCC")
                        .HasColumnType("int");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDonNhap");

                    b.HasIndex("MaKho");

                    b.HasIndex("MaNCC");

                    b.HasIndex("MaNV");

                    b.ToTable("DonNhapHangs");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.DonXuatHang", b =>
                {
                    b.Property<int>("MaDonXuat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDonXuat"));

                    b.Property<int>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<int>("MaKho")
                        .HasColumnType("int");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayXuat")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDonXuat");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaKho");

                    b.HasIndex("MaNV");

                    b.ToTable("DonXuatHangs");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.HangHoa", b =>
                {
                    b.Property<int>("MaHangHoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHangHoa"));

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HanSuDung")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaLoaiHang")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHangHoa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaHangHoa");

                    b.HasIndex("MaLoaiHang");

                    b.ToTable("HangHoas");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKH"));

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaLoaiKH")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenKH")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MaKH");

                    b.HasIndex("MaLoaiKH");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.KhoHang", b =>
                {
                    b.Property<int>("MaKho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKho"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SucChua")
                        .HasColumnType("int");

                    b.Property<string>("TenKho")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaKho");

                    b.HasIndex("UserId");

                    b.ToTable("KhoHangs");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.LoaiHangHoa", b =>
                {
                    b.Property<int>("MaLoaiHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiHang"));

                    b.Property<string>("TenLoaiHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaLoaiHang");

                    b.ToTable("LoaiHangHoas");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.LoaiKhachHang", b =>
                {
                    b.Property<int>("MaLoaiKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiKH"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MaLoaiKH");

                    b.ToTable("LoaiKhachHangs");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.NhaCungCap", b =>
                {
                    b.Property<int>("MaNCC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNCC"));

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenNCC")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MaNCC");

                    b.ToTable("NhaCungCaps");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.NhanVien", b =>
                {
                    b.Property<int>("MaNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNV"));

                    b.Property<string>("ChucVu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaKho")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("MaNV");

                    b.HasIndex("MaKho");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.PhieuKiemKe", b =>
                {
                    b.Property<int>("MaKiemKe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKiemKe"));

                    b.Property<int>("MaKho")
                        .HasColumnType("int");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayKiemKe")
                        .HasColumnType("datetime2");

                    b.HasKey("MaKiemKe");

                    b.HasIndex("MaKho");

                    b.HasIndex("MaNV");

                    b.ToTable("PhieuKiemKes");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.TonKho", b =>
                {
                    b.Property<int>("MaKho")
                        .HasColumnType("int");

                    b.Property<int>("MaHangHoa")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaKho", "MaHangHoa");

                    b.HasIndex("MaHangHoa");

                    b.ToTable("TonKhos");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("KhoHang_XNK.Models.ChiTietDonNhap", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.DonNhapHang", "DonNhapHang")
                        .WithMany()
                        .HasForeignKey("MaDonNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoHang_XNK.Models.HangHoa", "HangHoa")
                        .WithMany()
                        .HasForeignKey("MaHangHoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonNhapHang");

                    b.Navigation("HangHoa");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.ChiTietDonXuat", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.DonXuatHang", "DonXuatHang")
                        .WithMany()
                        .HasForeignKey("MaDonXuat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoHang_XNK.Models.HangHoa", "HangHoa")
                        .WithMany()
                        .HasForeignKey("MaHangHoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonXuatHang");

                    b.Navigation("HangHoa");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.ChiTietPhieuKiemKe", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.HangHoa", "HangHoa")
                        .WithMany()
                        .HasForeignKey("MaHangHoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoHang_XNK.Models.PhieuKiemKe", "PhieuKiemKe")
                        .WithMany()
                        .HasForeignKey("MaKiemKe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HangHoa");

                    b.Navigation("PhieuKiemKe");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.DonNhapHang", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.KhoHang", "KhoHang")
                        .WithMany()
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoHang_XNK.Models.NhaCungCap", "NhaCungCap")
                        .WithMany()
                        .HasForeignKey("MaNCC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoHang_XNK.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoHang");

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.DonXuatHang", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoHang_XNK.Models.KhoHang", "KhoHang")
                        .WithMany()
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoHang_XNK.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("KhoHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.HangHoa", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.LoaiHangHoa", "LoaiHangHoa")
                        .WithMany("HangHoas")
                        .HasForeignKey("MaLoaiHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiHangHoa");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.KhachHang", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.LoaiKhachHang", "LoaiKhachHang")
                        .WithMany("KhachHangs")
                        .HasForeignKey("MaLoaiKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiKhachHang");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.KhoHang", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.NhanVien", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.KhoHang", "KhoHang")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaKho");

                    b.Navigation("KhoHang");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.PhieuKiemKe", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.KhoHang", "KhoHang")
                        .WithMany()
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoHang_XNK.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.TonKho", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.HangHoa", "HangHoa")
                        .WithMany()
                        .HasForeignKey("MaHangHoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoHang_XNK.Models.KhoHang", "KhoHang")
                        .WithMany("TonKhos")
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HangHoa");

                    b.Navigation("KhoHang");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoHang_XNK.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("KhoHang_XNK.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KhoHang_XNK.Models.KhoHang", b =>
                {
                    b.Navigation("NhanViens");

                    b.Navigation("TonKhos");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.LoaiHangHoa", b =>
                {
                    b.Navigation("HangHoas");
                });

            modelBuilder.Entity("KhoHang_XNK.Models.LoaiKhachHang", b =>
                {
                    b.Navigation("KhachHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
