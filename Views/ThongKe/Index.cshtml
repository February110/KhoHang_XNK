@model ThongKeDoanhThuViewModel
@{
    ViewData["Title"] = "Thống kê Doanh Thu";
}
<!--Sidebar-->
<div class="sidebar transition overlay-scrollbars animate__animated  animate__slideInLeft">
    <div class="sidebar-content">
        <div id="sidebar">

            <!-- Logo -->
            <div class="logo">
                <h2 class="mb-0"><img src="~/images/logo/logo_sidebar.png"> WareTrack</h2>
            </div>

            <ul class="side-menu">
                <li>
                    <a asp-controller="KhoHang" asp-action="Index">
                        <i class='bx bxs-dashboard icon'></i> Kho Hàng
                    </a>
                </li>

                <!-- Divider-->
                <li class="divider" data-text="STARTER">Quản lý Hàng hóa</li>

                <li>
                    <a asp-controller="HangHoa" asp-action="Index">
                        <i class='bx bx-columns icon'></i>
                        Hàng Hóa
                    </a>
                </li>

                <li>
                    <a asp-controller="LoaiHangHoa" asp-action="Index">
                        <i class='bx bxs-meh-blank icon'></i>
                        Loại Hàng Hóa
                    </a>
                </li>

                <li>
                    <a asp-controller="TonKho" asp-action="Index">
                        <i class='fa fa-th icon'></i>
                        Tồn Kho
                    </a>
                </li>

                <!-- Divider-->
                <li class="divider" data-text="Atrana">Quản lý Nhân sự và Khách hàng</li>

                <li>
                    <a asp-controller="NhanVien" asp-action="Index">
                        <i class='bx bxs-user icon'></i>
                        Nhân Viên
                    </a>
                </li>

                <li>
                    <a asp-controller="KhachHang" asp-action="Index">
                        <i class='bx bxs-notepad icon'></i>
                        Khách Hàng
                    </a>
                </li>

                <li>
                    <a asp-controller="LoaiHangHoa" asp-action="Index">
                        <i class='bx bxs-widget icon'></i>
                        Loại Khách Hàng
                    </a>
                </li>

                <!-- Divider-->
                <li class="divider" data-text="Pages">Quản lý Nhà cung cấp</li>
                <li>
                    <a asp-controller="NhaCungCap" asp-action="Index">
                        <i class='fa fa-pencil-ruler icon'></i>
                        Nhà Cung Cấp
                    </a>
                </li>

                <!-- Divider-->
                <li class="divider" data-text="Pages">Quản lý Nhà cung cấp</li>
                <li>
                    <a asp-controller="DonNhapHang" asp-action="Index">
                        <i class='bx bxs-notepad icon'></i>
                        Đơn Nhập Hàng
                    </a>
                </li>
                <li>
                    <a asp-controller="DonXuatHang" asp-action="Index">
                        <i class='bx bxs-notepad icon'></i>
                        Đơn Xuất Hàng
                    </a>
                </li>
                <li>
                    <a asp-controller="PhieuKiemKe" asp-action="Index" >
                        <i class='bx bxs-notepad icon'></i>
                        Phiếu Kiểm Kê
                    </a>
                </li>
                <li>
                    <a asp-controller="ThongKe" asp-action="Index" class="active">
                        <i class="bx bxs-bar-chart-alt-2 icon"></i>
                        Thông Kê Doanh Thu
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>
<!-- End Sidebar-->


<div class="sidebar-overlay"></div>

<div class="content-start transition">
    <div class="container-fluid dashboard">
        <div class="container mt-4">
            <h2 class="text-center mb-4">@ViewData["Title"]</h2>

            <form asp-action="Index" method="get" id="filterForm">
                <div class="row mb-4">
                    <div class="col-md-6">
                        <label class="form-label">Chọn kho:</label>
                        <select name="khoId" class="form-select" onchange="this.form.submit()">
                            <option value="">Tất cả kho</option>
                            @foreach (var kho in Model.DanhSachKho)
                            {
                                <option value="@kho.MaKho" selected="@(Model.SelectedKhoId == kho.MaKho)">@kho.TenKho</option>
                            }
                        </select>
                    </div>
                </div>
            </form>

            <div class="row">
                <div class="col-md-6 mb-4">
                    <div class="card h-100">
                        <div class="alert alert-info">
                            <h5 class="card-title mb-0">Doanh thu nhập hàng</h5>
                        </div>
                        <div class="card-body">
                            <div class="chart-container" style="height: 300px;">
                                <canvas id="nhapHangChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 mb-4">
                    <div class="card h-100">
                        <div class="alert alert-info">
                            <h5 class="card-title mb-0">Doanh thu xuất hàng</h5>
                        </div>
                        <div class="card-body">
                            <div class="chart-container" style="height: 300px;">
                                <canvas id="xuatHangChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Thêm biểu đồ lãi suất -->
                <div class="col-md-12 mb-4">
                    <!-- Dùng col-12 để chiều rộng đầy đủ -->
                    <div class="card h-100">
                        <div class="card-header bg-warning text-dark">
                            <h5 class="card-title mb-0">
                                <i></i> Lãi suất
                               
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="chart-container" style="height: 350px;">
                                <!-- Cao hơn 1 chút -->
                                <canvas id="laiSuatChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="text-center mt-3">
                <button id="printButton" class="btn btn-primary">
                    <i class="fas fa-print"></i> In biểu đồ
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Khai báo biến toàn cục để lưu trữ các chart
        let nhapHangChart, xuatHangChart, laiSuatChart;

        document.addEventListener('DOMContentLoaded', function() {
            // Lấy dữ liệu từ Model
            var nhapHangData = @Html.Raw(Json.Serialize(Model.DoanhThuNhapHang));
            var xuatHangData = @Html.Raw(Json.Serialize(Model.DoanhThuXuatHang));

            // Tính toán lãi suất từ dữ liệu nhập/xuất
            var laiSuatData = calculateLaiSuat(nhapHangData, xuatHangData);

            // Vẽ các biểu đồ
            nhapHangChart = renderBarChart('nhapHangChart', nhapHangData, 'Doanh thu nhập hàng', '#36a2eb', 'VND');
            xuatHangChart = renderBarChart('xuatHangChart', xuatHangData, 'Doanh thu xuất hàng', '#4bc0c0', 'VND');
            laiSuatChart = renderLineChart('laiSuatChart', laiSuatData, 'Lãi suất', '#ff9800', '%');


            // Xử lý in biểu đồ
            document.getElementById('printButton').addEventListener('click', function() {
                window.print();
            });
        });

        // Hàm tính toán lãi suất từ dữ liệu nhập/xuất
        function calculateLaiSuat(nhapHangData, xuatHangData) {
            // Tạo dictionary từ dữ liệu xuất hàng để tra cứu nhanh
            const xuatHangDict = {};
            xuatHangData.forEach(item => {
                const key = `${item.thang}_${item.nam}`;
                xuatHangDict[key] = item.tongTien;
            });

            // Tính toán lãi suất
            return nhapHangData.map(item => {
                const key = `${item.thang}_${item.nam}`;
                const doanhThuXuat = xuatHangDict[key] || 0;
                const laiSuat = doanhThuXuat !== 0 
                    ? ((doanhThuXuat - item.tongTien) / doanhThuXuat * 100)
                    : 0;
                    
                return {
                    thang: item.thang,
                    nam: item.nam,
                    laiSuat: parseFloat(laiSuat.toFixed(2)) // Làm tròn 2 chữ số
                };
            });
        }

        // Hàm vẽ biểu đồ cột (cho doanh thu)
        function renderBarChart(chartId, data, title, color, unit) {
            var ctx = document.getElementById(chartId);
            var labels = data.map(item => `${item.thang}/${item.nam}`);
            var values = data.map(item => item.tongTien);

            return new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: title,
                        data: values,
                        backgroundColor: color,
                        borderColor: color,
                        borderWidth: 1
                    }]
                },
                options: getChartOptions(title, unit)
            });
        }

        // Hàm vẽ biểu đồ đường (cho lãi suất)
        function renderLineChart(chartId, data, title, color, unit) {
            var ctx = document.getElementById(chartId);
            var labels = data.map(item => `${item.thang}/${item.nam}`);
            var values = data.map(item => item.laiSuat);

            return new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: title,
                        data: values,
                        borderColor: color,
                        backgroundColor: color.replace(')', ', 0.1)'),
                        borderWidth: 2,
                        tension: 0.3,
                        fill: true,
                        pointBackgroundColor: color,
                        pointRadius: 4
                    }]
                },
                options: getChartOptions(title, unit)
            });
        }

        // Cấu hình chung cho biểu đồ
        function getChartOptions(title, unit) {
            return {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        text: title,
                        font: { size: 16 }
                    },
                    legend: {
                        display: true,
                        position: 'top'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return unit === '%' 
                                    ? `${context.parsed.y.toFixed(2)}%`
                                    : `${context.parsed.y.toLocaleString('vi-VN')} ${unit}`;
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: unit !== '%',
                        ticks: {
                            callback: function(value) {
                                return unit === '%' 
                                    ? value + '%'
                                    : value.toLocaleString('vi-VN') + ' ' + unit;
                            }
                        }
                    }
                }
            };
        }

        // Hàm chuyển đổi chart thành hình ảnh
        function getChartImage(chart) {
            return new Promise((resolve) => {
                const canvas = document.createElement('canvas');
                canvas.width = chart.canvas.width;
                canvas.height = chart.canvas.height;
                
                const tempChart = new Chart(canvas, {
                    type: chart.config.type,
                    data: JSON.parse(JSON.stringify(chart.config.data)),
                    options: chart.config.options
                });
                
                setTimeout(() => {
                    const image = tempChart.toBase64Image();
                    tempChart.destroy();
                    resolve(image);
                }, 500);
            });
        }
    </script>
}